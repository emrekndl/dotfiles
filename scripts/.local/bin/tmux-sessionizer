#!/usr/bin/env bash

switch_to() {
    if [[ -z $TMUX ]]; then
        tmux attach-session -t $1
    else
        tmux switch-client -t $1
    fi
}

has_session() {
    tmux list-sessions -F '#{session_name}' | grep -qx "$1"
    # tmux list-sessions | grep -q "^$1:"
}

hydrate() {
    if [ -f $2/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $2/.tmux-sessionizer" c-M
    elif [ -f $HOME/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $HOME/.tmux-sessionizer" c-M
    fi
}

dirs_and_sessions() {
# Aktif session’ların kök dizinleri
mapfile -t session_dirs < <(
  tmux list-sessions -F "#{session_name}" 2>/dev/null | while read -r s; do
    tmux display-message -p -t "${s}:0" "#{pane_current_path}"
  done | sort -u
)

# find ile aranacak dizinler
mapfile -t all_dirs < <(
  fd . --max-depth 2 --type d --hidden --follow --color=always \
       ~ ~/dev ~/.config ~/dotfiles 2>/dev/null
  # find ~/ ~/dev ~/.config ~/dotfiles \
  #   -mindepth 1 -maxdepth 2 -type d 2>/dev/null
)
}

if [[ $# -eq 1 ]]; then
    selected=$1
else
    # Önce session’lı dizinler, sonra geri kalanlar
    dirs_and_sessions
    selected=$(
        {
            printf '%s\n' "${session_dirs[@]}"
            printf '%s\n' "${all_dirs[@]}" | grep -xFv -f <(printf '%s\n' "${session_dirs[@]}")
        } | fzf --ansi
    )
    # selected=$(find ~/ ~/dev ~/.config ~/dotfiles -mindepth 1 -maxdepth 2 -type d | fzf)
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr .: _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -ds $selected_name -c $selected
    hydrate $selected_name $selected
    # exit 0
fi

if ! has_session $selected_name; then
    tmux new-session -ds $selected_name -c $selected
    hydrate $selected_name $selected
fi

switch_to $selected_name


# # Create a ~/.tmux-sessionizer file
#
# new-window -n edit "nvim ."
#
# new-window -n server "podman-compose up --build" 
#
# split-window -v -p 30 "python main.py"
#
# select-window -t edit
#
# tmux new-window -n (term,edit,run,logs,db,test)
#
# tmux rename-window -t "0" "edit"
# tmux -c "nvim ."
#
# tmux new-window -dn term
# tmux new-window -dn edit
# tmux select-window -t edit

# tmux new-window -dn term
# vim .
# clear
